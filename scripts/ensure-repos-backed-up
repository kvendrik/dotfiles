#!/bin/bash

if [ -z "$REPOSITORIES_DIRECTORY" ]; then
  echo "\$REPOSITORIES_DIRECTORY env variable command not found. See ./foundation/rps.bash"
  exit 1
fi

repos_path="$REPOSITORIES_DIRECTORY"
folder_path=""
error_found=0

for folder_name in "$repos_path"/*; do
  folder_path="$repos_path/$folder_name"

  if [ ! -d "$folder_path" ]; then
    continue
  fi

  echo "Checking $folder_name"
  cd "$folder_path" || return

  if ! git rev-parse --is-inside-work-tree &> /dev/null; then
    echo "$folder_path: is not a Git repository."
    error_found=1
    continue
  fi

  if [ -n "$(git status -s)" ]; then
    echo "$folder_path: could not check because of uncommited changes."
    error_found=1
    continue
  fi

  if [[ "$(git rev-parse --abbrev-ref HEAD)" != "master" ]]; then
    echo "$folder_path: could not check because project is not on master branch."
    error_found=1
    continue
  fi

  if [[ "$(git rev-parse --abbrev-ref HEAD)" != "master" ]]; then
    echo "$folder_path: could not check because project is not on master branch."
    error_found=1
    continue
  fi

  if ! git remote update &> /dev/null; then
    echo "$folder_path: error while fetching remote."
    error_found=1
    continue
  fi

  if [ -n "$(git log origin/master..HEAD --oneline)" ]; then
    echo "$folder_path: local copy is ahead of remote."
    error_found=1
    continue
  fi
done

if [ $error_found -eq 1 ]; then
  exit 1
fi
